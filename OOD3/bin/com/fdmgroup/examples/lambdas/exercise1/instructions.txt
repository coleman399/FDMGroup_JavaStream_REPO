interface -- NumberFilter -- that will have an abstract method:



// Please notice the wrapper.
public boolean filterNumber(Integer number);



2. Create a class -- NumberFilterTest

a. Input is a list of made-up numbers containing both positive and negative integers.
b. The output will also be a list of numbers that fulfill a criteria

c. Create the lambdas to fulfill the following cases.
i. Retrieve a list of even numbers from the input list.
ii. Retrieve a list of odd numbers from the input list.
iii. Retrieve a list of positive numbers from the input list.
iv. Retrieve a list of negative numbers from the input list.
v. Retrieve a list of prime numbers from the input list.
* Note: negative numbers, 0 and 1 are not prime numbers.



d. Write a function that accepts a list of input numbers and a lambda expression, and prints the output for each scenario mentioned above. Try to make the lambda expression readable. Utilize the NumberFilter interface.



e. The lambda expression will take on the form:



1. [param] -> [body]
2. function_from_d(type,( ) -> ... );



f. It might make it easier to first write he non-Lambda calls



g. Optional: Use TDD / Junit